//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.TripsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseModel", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.TripsService.GamePlay))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.TripsService.GameMove))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.TripsService.GameUser))]
    public partial class BaseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GamePlay", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    public partial class GamePlay : Client.TripsService.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanMakeNewMovesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.TripsService.GameMove[] GameMovesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] GameTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.TripsService.GameUser[] GameUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoverUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] WinningCombinationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanMakeNewMoves {
            get {
                return this.CanMakeNewMovesField;
            }
            set {
                if ((this.CanMakeNewMovesField.Equals(value) != true)) {
                    this.CanMakeNewMovesField = value;
                    this.RaisePropertyChanged("CanMakeNewMoves");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.TripsService.GameMove[] GameMoves {
            get {
                return this.GameMovesField;
            }
            set {
                if ((object.ReferenceEquals(this.GameMovesField, value) != true)) {
                    this.GameMovesField = value;
                    this.RaisePropertyChanged("GameMoves");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] GameTable {
            get {
                return this.GameTableField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTableField, value) != true)) {
                    this.GameTableField = value;
                    this.RaisePropertyChanged("GameTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.TripsService.GameUser[] GameUsers {
            get {
                return this.GameUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.GameUsersField, value) != true)) {
                    this.GameUsersField = value;
                    this.RaisePropertyChanged("GameUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MoverUserId {
            get {
                return this.MoverUserIdField;
            }
            set {
                if ((this.MoverUserIdField.Equals(value) != true)) {
                    this.MoverUserIdField = value;
                    this.RaisePropertyChanged("MoverUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] WinningCombination {
            get {
                return this.WinningCombinationField;
            }
            set {
                if ((object.ReferenceEquals(this.WinningCombinationField, value) != true)) {
                    this.WinningCombinationField = value;
                    this.RaisePropertyChanged("WinningCombination");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameMove", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    public partial class GameMove : Client.TripsService.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayId {
            get {
                return this.PlayIdField;
            }
            set {
                if ((this.PlayIdField.Equals(value) != true)) {
                    this.PlayIdField = value;
                    this.RaisePropertyChanged("PlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameUser", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    public partial class GameUser : Client.TripsService.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPlayIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPlayId {
            get {
                return this.CurrentPlayIdField;
            }
            set {
                if ((this.CurrentPlayIdField.Equals(value) != true)) {
                    this.CurrentPlayIdField = value;
                    this.RaisePropertyChanged("CurrentPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripsService.ITripsService")]
    public interface ITripsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GameUser_Register", ReplyAction="http://tempuri.org/ITripsService/GameUser_RegisterResponse")]
        Client.TripsService.GameUser GameUser_Register(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GameUser_Register", ReplyAction="http://tempuri.org/ITripsService/GameUser_RegisterResponse")]
        System.Threading.Tasks.Task<Client.TripsService.GameUser> GameUser_RegisterAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GameUser_Unregister", ReplyAction="http://tempuri.org/ITripsService/GameUser_UnregisterResponse")]
        Client.TripsService.GameUser GameUser_Unregister(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GameUser_Unregister", ReplyAction="http://tempuri.org/ITripsService/GameUser_UnregisterResponse")]
        System.Threading.Tasks.Task<Client.TripsService.GameUser> GameUser_UnregisterAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Request", ReplyAction="http://tempuri.org/ITripsService/GamePlay_RequestResponse")]
        Client.TripsService.GamePlay GamePlay_Request(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Request", ReplyAction="http://tempuri.org/ITripsService/GamePlay_RequestResponse")]
        System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_RequestAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Show", ReplyAction="http://tempuri.org/ITripsService/GamePlay_ShowResponse")]
        Client.TripsService.GamePlay GamePlay_Show(int gamePlayId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Show", ReplyAction="http://tempuri.org/ITripsService/GamePlay_ShowResponse")]
        System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_ShowAsync(int gamePlayId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Move", ReplyAction="http://tempuri.org/ITripsService/GamePlay_MoveResponse")]
        Client.TripsService.GamePlay GamePlay_Move(int gamePlayId, int userId, int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITripsService/GamePlay_Move", ReplyAction="http://tempuri.org/ITripsService/GamePlay_MoveResponse")]
        System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_MoveAsync(int gamePlayId, int userId, int position);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITripsServiceChannel : Client.TripsService.ITripsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TripsServiceClient : System.ServiceModel.ClientBase<Client.TripsService.ITripsService>, Client.TripsService.ITripsService {
        
        public TripsServiceClient() {
        }
        
        public TripsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TripsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TripsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TripsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.TripsService.GameUser GameUser_Register(string name) {
            return base.Channel.GameUser_Register(name);
        }
        
        public System.Threading.Tasks.Task<Client.TripsService.GameUser> GameUser_RegisterAsync(string name) {
            return base.Channel.GameUser_RegisterAsync(name);
        }
        
        public Client.TripsService.GameUser GameUser_Unregister(int id) {
            return base.Channel.GameUser_Unregister(id);
        }
        
        public System.Threading.Tasks.Task<Client.TripsService.GameUser> GameUser_UnregisterAsync(int id) {
            return base.Channel.GameUser_UnregisterAsync(id);
        }
        
        public Client.TripsService.GamePlay GamePlay_Request(int userId) {
            return base.Channel.GamePlay_Request(userId);
        }
        
        public System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_RequestAsync(int userId) {
            return base.Channel.GamePlay_RequestAsync(userId);
        }
        
        public Client.TripsService.GamePlay GamePlay_Show(int gamePlayId) {
            return base.Channel.GamePlay_Show(gamePlayId);
        }
        
        public System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_ShowAsync(int gamePlayId) {
            return base.Channel.GamePlay_ShowAsync(gamePlayId);
        }
        
        public Client.TripsService.GamePlay GamePlay_Move(int gamePlayId, int userId, int position) {
            return base.Channel.GamePlay_Move(gamePlayId, userId, position);
        }
        
        public System.Threading.Tasks.Task<Client.TripsService.GamePlay> GamePlay_MoveAsync(int gamePlayId, int userId, int position) {
            return base.Channel.GamePlay_MoveAsync(gamePlayId, userId, position);
        }
    }
}
